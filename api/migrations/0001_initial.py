# Generated by Django 4.2.6 on 2023-10-26 20:43

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("Admin", "Admin"),
                            ("Client", "Client"),
                            ("Media Buyer", "Media Buyer"),
                            ("Landing Page Builder", "Landing Page Builder"),
                            ("Voice Over", "Voice Over"),
                            ("Video Editor", "Video Editor"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("link", models.CharField(blank=True, max_length=255, null=True)),
                ("type", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "sourcing_price",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "service_provider",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("country", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "selling_price",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("quantity", models.IntegerField(blank=True, null=True)),
                ("upsell_status", models.BooleanField(blank=True, null=True)),
                (
                    "upsell_offers",
                    models.CharField(blank=True, max_length=55, null=True),
                ),
                ("AOV", models.CharField(blank=True, max_length=20, null=True)),
                ("test_cpp", models.CharField(blank=True, max_length=20, null=True)),
                ("decision", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LandingPage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("type", models.CharField(blank=True, max_length=30, null=True)),
                ("store", models.CharField(blank=True, max_length=55, null=True)),
                ("language", models.CharField(blank=True, max_length=20, null=True)),
                ("status", models.CharField(blank=True, max_length=20, null=True)),
                ("final_link", models.CharField(blank=True, max_length=255, null=True)),
                ("note", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="lp_creator",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "media_buyer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="lp_media_buyer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Creative",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("format", models.CharField(blank=True, max_length=30, null=True)),
                ("language", models.CharField(blank=True, max_length=20, null=True)),
                ("is_voice_over", models.BooleanField(blank=True, null=True)),
                ("script", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "voice_over_link",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("status", models.CharField(blank=True, max_length=20, null=True)),
                ("final_link", models.CharField(blank=True, max_length=255, null=True)),
                ("note", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "creator",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="creative_creator",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "media_buyer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="creative_media_buyer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="api.product",
                    ),
                ),
                (
                    "voice_over",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="creative_voice_over",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Campaign",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("stated_date", models.DateField(blank=True, null=True)),
                ("ended_date", models.DateField(blank=True, null=True)),
                ("status", models.CharField(blank=True, max_length=20, null=True)),
                ("platform", models.CharField(blank=True, max_length=20, null=True)),
                ("budget", models.FloatField(blank=True, null=True)),
                ("leads", models.IntegerField(blank=True, null=True)),
                ("cpp", models.FloatField(blank=True, null=True)),
                ("amount_spent", models.FloatField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
